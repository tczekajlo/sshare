// protoc --go_out=plugins=grpc:. *.proto
syntax = "proto3";

option go_package = ".;sshare";
package protobuf;

service Create {
  rpc Backend (stream BackendData) returns (stream BackendReply) {}
}

service Delete {
  rpc Backend (BackendData) returns (BackendReply) {}
}

service TLS {
  rpc Connection (TLSRequest) returns (TLSResponse) {}
}

service OAuth2 {
  rpc Exchange (OAuth2Request) returns (OAuth2Response) {}
}

message OAuth2Request {
  string code = 1;
}

message OAuth2Response {
  string token = 1;
}

message TLSRequest {
  bool send = 1;
}

message TLSResponse {
  bytes CACert = 1;
  int32 TLSServerPort = 2;
  bool authEnabled = 3;
  string authURL = 4;
  string authState = 5;
  int32 OAuth2ServerPort = 6;
}

message BackendData {
  string streamID = 1;
  string name = 2;
  string sshPublicKey = 3;
  HTTPOptions HTTPOptions = 4;
  bool onlyTCP = 5;
  Connection connection = 6;
}

message BackendReply {
  string error = 1;
  bool ready = 2;
  Connection connection = 3;
  bool deleted = 4;
  int32 clientSessionTimeout = 5;
}

message HTTPOptions {
  bool CORSEnabled = 1;
  bool HTTPSRedirect = 2;

}

message Connection {
  string SSHHost = 1;
  int32 SSHPort = 2;
  string Domain = 3;
  bool HTTPScheme = 4;
  int32 RemotePort = 5;
  int32 LocalPort = 6;
}
