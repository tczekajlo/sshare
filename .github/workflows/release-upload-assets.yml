on:
  push:
    tags:
    - '*'

name: Release and Upload Asset

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15.6'

      - name: Build project
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} make build

      - uses: actions/upload-artifact@v2
        with:
          name: sshare_${{ matrix.os }}_${{ matrix.arch }}
          path: dist/sshare*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get release version
        id: release_version
        run: |
          sed -e 's/_version_/'${GITHUB_REF#refs/tags/}'/g' package.json.tmp > package.json
          echo "::set-output name=version::${GITHUB_REF#refs/tags/}"

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@1.0.2
        id: changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_version.outputs.version }}
          release_name: ${{ steps.release_version.outputs.version }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

  upload:
    name: Upload Assets
    runs-on: ubuntu-latest
    needs: [release]
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64]

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: sshare_${{ matrix.os }}_${{ matrix.arch }}

      - name: Upload Release Asset
        if: matrix.os != 'windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./sshare
          asset_name: sshare_${{ matrix.os }}_${{ matrix.arch }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        if: matrix.os == 'windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./sshare.exe
          asset_name: sshare_${{ matrix.os }}_${{ matrix.arch }}.exe
          asset_content_type: application/octet-stream
